#!/usr/bin/env ruby
require 'readline'


def ask(prompt="", newline=false)
  prompt += "\n" if newline
  Readline.readline(prompt, true).squeeze(" ").strip
end



INSTALL_LOC = Dir.home + '/.rei/'

if Dir.exist? INSTALL_LOC
  puts "warning: ~/.rei already exists"
end

puts "rei will install to ~/.rei and put an alias in your shell's .rc. hit <enter> or 'y' if this is okay."
STDOUT.flush
CONTINUE = ask "> "
if CONTINUE == "" || CONTINUE == "y"
  # copy to ~/.rei/
    if Dir.exist? INSTALL_LOC
      # raise "~/.rei already exists! please manually remove if you want to proceed" 
    else
      COPY_COMMAND = 'cp -rf ' + File.dirname(__FILE__) + ' ' + INSTALL_LOC
      print "running `" + COPY_COMMAND + "`\n"
      system COPY_COMMAND 
    end

    begin
      *junk, SHELL = `echo $SHELL`.split('/') 
    rescue Exception
       SHELL="bash" #ruby 1.8 (parsing exceptions are not rescued by default)
     end
    bash_config = '.' + SHELL.chomp + 'rc'
    bash_config = '.bash_profile' if RUBY_PLATFORM.match /darwin/ #and ... ?
    
    SHELLRC = (Dir.home + '/' + bash_config ).chomp
    print "writing an alias for `rei` to " + SHELLRC + "\n"
    open(SHELLRC, 'a') do |f|
      f.puts "\n"
      f.puts "######## generated by rei's install script"
      f.puts "alias rei=\'ruby #{ Dir.home }/.rei/main.rb\'"
    end
    
    puts "add auto-complete by typing"
    puts "complete -C #{INSTALL_LOC}autocomplete.rb rei"
    `#{INSTALL_LOC}autocomplete.rb`
end

